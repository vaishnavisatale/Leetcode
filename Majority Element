class Solution {
    public int majorityElement(int[] nums) {


        if(nums.length==1)
            return nums[0];
        //bruit force - store in map and return with max value

        /*
        //approach 1
        Arrays.sort(nums);
        int n = nums.length;
        return nums[n/2];
        
        //approach 2
        int count = 0;
        int candidate = 0;

        for (int num : nums) {
            if (count == 0) {
                candidate = num;
            }

            if (num == candidate) {
                count++;
            } else {
                count--;
            }
        }
        */
        
        Arrays.sort(nums);

        int cnt=0;
        int m1=0,m2=0;

        for(int i=0;i<nums.length-1;i++)
        {
            if(nums[i]==nums[i+1])
            {
                cnt++;
            }
            else
            {

                if(m1<cnt)
                {
                    m2=nums[i-1];
                    m1=cnt;
                }

                cnt=1;
            }

        }

        if(m1<cnt)
        {
            return nums[nums.length-1];
            //m1=cnt;
        }
        else
            return m2;

    }
}
